<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wcx.video.dao.VideoDao">

    <insert id="addVideos" useGeneratedKeys="true" keyProperty="id">
        insert into
            t_video(
            id,
            userId,
            url,
            thumbnail,
            title,
            `type`,
            duration,
            area,
            description,
            createTime
        )values(
                   #{id},
                   #{userId},
                   #{url},
                   #{thumbnail},
                   #{title},
                   #{type},
                   #{duration},
                   #{area},
                   #{description},
                   #{createTime}
               )
    </insert>
    <insert id="batchAddVideoTags">
        insert into
        t_video_tag(
        videoId,
        tagId,
        createTime
        )values
        <foreach collection="videoTagList" item="videoTag" separator=",">
            (
            #{videoTag.videoId},
            #{videoTag.tagId},
            #{videoTag.createTime}
            )
        </foreach>
    </insert>
    <insert id="addVideoLike">
        insert into
            t_video_like(
            userId,
            videoId,
            createTime
        )values(
                   #{userId},
                   #{videoId},
                   #{createTime}
               )
    </insert>
    <insert id="addVideoCollection">
        insert into
            t_video_collection(
            userId,
            videoId,
            groupId,
            createTime
        )values(
                   #{userId},
                   #{videoId},
                   #{groupId},
                   #{createTime}
               )
    </insert>
    <insert id="addVideoCoin">
        insert into
            t_video_coin(
            userId,
            videoId,
            amount,
            createTime
        )values(
                   #{userId},
                   #{videoId},
                   #{amount},
                   #{createTime}
               )
    </insert>
    <insert id="addVideoComment">
        insert into
            t_video_comment(
            videoId,
            userId,
            comment,
            replyUserId,
            rootId,
            createTime
        )values(
                   #{videoId},
                   #{userId},
                   #{comment},
                   #{replyUserId},
                   #{rootId},
                   #{createTime}
               )
    </insert>
    <insert id="batchAddVideoBinaryPictures">
        insert into
            t_video_binary_picture(
                videoId,
                frameNo,
                url,
                videoTimestamp,
                createTime
            )
        values
        <foreach collection="pictureList" item="picture" separator=",">
            (
                #{picture.videoId},
                #{picture.frameNo},
                #{picture.url},
                #{picture.videoTimestamp},
                #{picture.createTime}
            )
        </foreach>
    </insert>
    <update id="updateVideoCoin">
        update
            t_video_coin
        set
            amount = #{amount},
            updateTime = #{updateTime}
        where
            videoId = #{videoId}
          and userId = #{userId}
    </update>
    <delete id="deleteVideoLike">
        delete from
            t_video_like
        where
            videoId = #{videoId}
            and userId = #{userId}
    </delete>
    <delete id="deleteVideoCollection">
        delete from
            t_video_collection
        where
            videoId = #{videoId}
            and userId = #{userId}
    </delete>
    <delete id="deleteVideoTags">
        delete from
            t_video_tag
        where
            videoId = #{videoId}
        and tagId in
            <foreach collection="tagIdList" item="tagId" open="(" close=")" separator=",">
                #{tagId}
            </foreach>
    </delete>
    <select id="pageCountVideos" resultType="java.lang.Integer">
        select
            count(*)
        from
            t_video
        where
            1=1
            <if test="area != null and area != '' ">
                and area = #{area}
            </if>
    </select>
    <select id="pageListVideos" resultType="com.wcx.video.domain.Video">
        select
            *
        from
            t_video
        where
            1=1
            <if test="area != null and area != ''">
                and area = #{area}
            </if>
        order by id desc
        limit #{start}, #{limit}
    </select>
    <select id="getVideoById" resultType="com.wcx.video.domain.Video">
        select
            *
        from
            t_video
        where
            id = #{id}
    </select>
    <select id="getVideoLikeByVideoIdAndUserId" resultType="com.wcx.video.domain.VideoLike">
        select
            *
        from
            t_video_like
        where
            videoId = #{videoId}
            and userId = #{userId}
    </select>
    <select id="getVideoLikes" resultType="java.lang.Long">
        select
            count(*)
        from
            t_video_like
        where
            videoId = #{videoId}
    </select>
    <select id="getVideoCollections" resultType="java.lang.Long">
        select
            count(*)
        from
            t_video_collection
        where
            videoId = #{videoId}
    </select>
    <select id="getVideoCollectionByVideoIdAndUserId" resultType="com.wcx.video.domain.VideoCollection">
        select
            *
        from
            t_video_collection
        where
            videoId = #{videoId}
            and userId = #{userId}
    </select>
    <select id="getVideoCoinByVideoIdAndUserId" resultType="com.wcx.video.domain.VideoCoin">
        select
            *
        from
            t_video_coin
        where
            videoId = #{videoId}
          and userId = #{userId}
    </select>
    <select id="getVideoCoinsAmount" resultType="java.lang.Long">
        select
            sum(amount)
        from
            t_video_coin
        where
            videoId = #{videoId}
    </select>
    <select id="pageCountVideoComments" resultType="java.lang.Integer">
        select
            count(*)
        from
            t_video_comment
        where
            videoId = #{videoId}
            and rootId is null
    </select>
    <select id="batchGetVideoCommentsByRootIds" resultType="com.wcx.video.domain.VideoComment">
        select
            *
        from
            t_video_comment
        where
            rootId in
            <foreach collection="rootIdList" item="rootId" open="(" close=")" separator=",">
                #{rootId}
            </foreach>
        order by id
    </select>
    <select id="getVideoDetails" resultType="com.wcx.video.domain.Video">
        select
            *
        from
            t_video
        where
            id = #{id}
    </select>
    <select id="getVideoView" resultType="com.wcx.video.domain.VideoView">
        select
            *
        from
            t_video_view
        where
            videoId = #{videoId}
            <if test="userId == null and cilentId != null">
                and clientId = #{clientId} and userId is null
            </if>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="ip != null and ip != '' ">
                and ip = #{ip}
            </if>
            <if test="today != null and tody != '' ">
                and DATE_FORMAT(createTime, '%Y-%m-%d') = #{today}
            </if>
    </select>
    <select id="getVideoViewCounts" resultType="java.lang.Integer">
        select
            count(*)
        from
            t_video_view
        where
            videoId = #{videoId}
    </select>
    <select id="getAllUserPreference" resultType="com.wcx.video.domain.UserPreference">
        select
            userId,
            videoId,
            sum(case operationType
                    when '0' then 6
                    when '1' then 2
                    when '2' then 2
                    else 0 end
            ) as 'value'
        from
            t_video_operation
        group by userId, videoId
    </select>
    <select id="batchGetVideoByIds" resultType="com.wcx.video.domain.Video">
        select
            *
        from
            t_video
        where
            id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <select id="getVideoBinaryImages" resultType="com.wcx.video.domain.VideoBinaryPicture">
        select
            *
        from
            t_video_binary_picture
        where
            videoId = #{videoId}
        <if test="frameNo != null and frameNo != '' ">
            and frameNo = #{frameNo}
        </if>
        <if test="videoTimestamp != null">
            and videoTimestamp = #{videoTimestamp}
        </if>
    </select>
    <select id="getVideoTagsByVideoId" resultType="com.wcx.video.domain.VideoTag">
        select
            tvt.videoId,
            tvt.tagId,
            tt.name tagName
        from
            t_video_tag tvt
                left join t_tag tt on tvt.tagId = tt.id
        where
            tvt.videoId = #{videoId}
    </select>
    <select id="pageListVideoComments" resultType="com.wcx.video.domain.VideoComment">
        select
            *
        from
            t_video_comment
        where
            videoId = #{videoId}
            and
            rootId is null
        order by id desc
        limit #{start}, #{limit}
    </select>
</mapper>